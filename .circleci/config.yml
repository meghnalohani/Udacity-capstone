#arn:aws:eks:us-east-1:328901906092:cluster/meghnawebsite3

version: 2.1
            
jobs:
  # create-deployment:
  #   executor: aws-eks/python3
  #   steps:
  #     - checkout
  #     - aws-eks/update-kubeconfig-with-authenticator:
  #         cluster-name: meghnawebsite
  #         install-kubectl: true
  docker-lint:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Lint Dockerfile
          command: |
            sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
            sudo chmod +x /bin/hadolint
            cd ~/project/
            sudo hadolint Dockerfile
            
  build-docker-image:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout 
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Build  Docker image
          command: |
            docker build --tag=tripandtrail .
            docker image ls
            dockerpath=meghnalohani/tripandtrail
            docker login -u meghnalohani -p mskl954989
            echo "Docker ID and Image: $dockerpath"
            docker tag tripandtrail $dockerpath
            docker push $dockerpath
    

  upload-docker-image:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Build and Upload Docker image
          command: |
            docker build --tag=tripandtrail .
            docker image ls
            dockerpath=meghnalohani/tripandtrail
            docker login -u meghnalohani -p mskl954989
            echo "Docker ID and Image: $dockerpath"
            docker tag tripandtrail $dockerpath
            docker push $dockerpath

  build-and-upload-docker-image:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Build and Upload Docker image
          command: |
            docker build --tag=tripandtrail .
            docker image ls
            dockerpath=meghnalohani/tripandtrail
            docker login -u meghnalohani -p skl954989
            echo "Docker ID and Image: $dockerpath"
            docker tag tripandtrail $dockerpath
            docker push $dockerpath

  deploy-image-to-kubernetes-cluster:
    docker:
      - image:  amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Deploy image to Kubernetes cluster
          command: |
            aws eks --region us-east-1 update-kubeconfig --name meghnawebsite3
            curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x ./kubectl
            mv ./kubectl /usr/local/bin/kubectl
            kubectl config use-context arn:aws:eks:us-east-1:328901906092:cluster/meghnawebsite3
            kubectl apply -f ~/project/rollingdeployment.yml
            kubectl get nodes
            kubectl get deployments
            kubectl get pod -o wide
            kubectl get service/tripandtrail

  rollout:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Rollout app
          command: |
            aws eks --region us-east-1 update-kubeconfig --name meghnawebsite3
            curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x ./kubectl
            mv ./kubectl /usr/local/bin/kubectl
            kubectl config use-context arn:aws:eks:us-east-1:328901906092:cluster/meghnawebsite3
            kubectl apply -f ~/project/rollingdeployment.yml
            kubectl rollout status deployments/tripandtrail

orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.4.0
  
workflows:
  default:
    jobs:
      - docker-lint
      - build-and-upload-docker-image:
          requires: [docker-lint]
      - deploy-image-to-kubernetes-cluster:
          requires: [build-and-upload-docker-image]
      - rollout:
          requires: [build-and-upload-docker-image]
